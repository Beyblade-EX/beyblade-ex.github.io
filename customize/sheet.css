nav {
    div {
        white-space:nowrap; 
        text-align:right;

        &:first-of-type {
            grid-area:1/4/2/5;
            align-self:end;
        }
        &:last-of-type {
            grid-area:2/4/3/5;
        }
    }
    input[type=number] {
        width:3em; height:2em;
        margin:0 .2em 0 .3em;
        vertical-align:middle;
    }
    button,label {
        background:var(--theme); color:black;
        border-radius:8em;
        padding:0 .5em;
        font-size:.9em;
    }
}
main {
    max-width:30em;
    position:relative;
}
main>canvas {
    position:absolute; top:0; left:0;
    width:min(50em,100vh - 6rem);
    transform:rotate(90deg) translate(0,-100%); transform-origin:0 0; 
}
spin-knob {
    --bg:black;
}
form {
    margin-left:calc(min(50em,100vh - 6rem)/4); margin-right:.25em;
    display:grid; grid-template-columns:1fr 1fr 1fr auto;
    position:relative;

    details {
        grid-area:1/1/2/4;
        margin-bottom:1em;

        ul {
            text-align:left; font-size:.8em;
            padding:0 0.5em 0 2em;
        }
    
    }

    .message {
        position:absolute; left:50%; top:50%; transform:translate(-50%,-50%);
        z-index:9;
        width:100%; 
        background:rgba(0,0,0,.8);
        padding:1em;

        small {display:block;}
    }
    fieldset {
        padding:0; border:none;
        font-size:.95em;
        
        &:not(#layer) {
            label,spin-knob::before {font-size:.9em;}
        }
    }
    #type {
        grid-area:2/1/3/4;
        display:flex; justify-content:center; align-items:center;
        
        span {margin:0 1em;}
        button {font-size:2em;color:var(--theme);}
    }
    fieldset[id|=control] {
        grid-area:3/1/4/4;
    }
    #layer {
        grid-area:1/4/9/5;
        display:flex; flex-direction:column;
        font-size:1em;
        margin-right:.1em;
        max-height:calc(100vh - 6rem); overflow-y:scroll;

        &::-webkit-scrollbar {display:none;}

        div {display:contents;}
        label {
            border:.1em solid gray; border-radius:.3em;
            width:1.8em; min-height:1.8em; max-height:1.8em; line-height:1.8em;
            margin:.2em 0;
            filter:none;

            &:has(input:checked) {
                background:var(--theme); color:black;
                border-color:var(--theme);
            }
            &::before {all:unset;}
            img {
                width:100%; height:100%; object-fit:contain;
            }
        }
        button {
            font-size:1.5em; color:var(--theme);
            height:1.33333em;

            &[disabled] {
                filter:saturate(0);
                pointer-events:none;
            }
        }
    }
    #control {
        grid-area:4/1/5/4;
        padding-top:.5em;
        display:grid; grid-template-columns:repeat(3,auto); gap:.5em; justify-content:center;
    }
    #control-image {
        justify-self:center;
        border-radius:.5rem; border:.15rem solid;
        color:var(--theme);
        display:flex;

        :not(input) {
            width:6.5em; height:4em; line-height:4em;
            margin:1em 0;
            font-size:1em !important;
        }
        label {border-right:.05em solid;}
        button {border-left:.05em solid;}
    }
    #control-color {
        justify-self:center;
        border-bottom:.2em solid; padding-bottom:1em;
        display:grid; grid-template-columns:repeat(3,auto); gap:.3em .5em; justify-content:center;

        div {
            grid-area:1/1/2/4;
            border-bottom:.2em solid; padding-bottom:.5em;

            label {
                display:inline-block;
                margin:.2em;
            }
        }
        label {
            display: flex; flex-direction: column; align-items: center;
            margin-top:.5em;
        }
    }
    label:has(input[value])::after {
        content:'';
        display:block; width:1.5em; height:1.5em;
        margin:auto;
    }
    label:has(input[value=Linear])::after {
        background:linear-gradient(var(--theme),var(--theme-dark));
    }
    label:has(input[value=Radial])::after {
        background:radial-gradient(var(--theme),var(--theme-dark));
    }
    label:has(input[value=Conic])::after {
        background:conic-gradient(var(--theme),var(--theme-dark),var(--theme));
    }
}

[popover]:popover-open {
    display:block !important;
    padding:1em .5em;

    * {width:100%;}
    p {
        margin:0 auto 2em auto;

        small {
            display:block;
            margin-top:.5em;
        }
    }
    img {width:6em;}
}